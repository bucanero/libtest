name: Build package

on: [ push, pull_request, workflow_dispatch ]

jobs:
  build_pkg:
    runs-on: ubuntu-20.04
    steps:

    - name: Checkout
      uses: actions/checkout@v3
      with:
        fetch-depth: 1

    - name: Checkout Dependecies
      run: |
        curl -sL https://src.fedoraproject.org/repo/pkgs/mbedtls/mbedtls-2.16.6-apache.tgz/sha512/a0c48b694d7bc70256d26c44bfb2ac802428560b02e50fe2e47762bc595e2c7b8fac934badb3452acb01d8a54386eafae0ff2894320d24ab7554f1c8e6cb4bcf/mbedtls-2.16.6-apache.tgz | tar xvz -C ./
        curl -sL https://curl.se/download/curl-7.64.1.tar.bz2 | tar xvj -C ./
        wget https://raw.githubusercontent.com/bucanero/SDL-PS4/ps4/cmake/openorbis.cmake

    - name: Set env vars
      id: slug
      run: |
        echo "::set-output name=sha8::$(echo ${GITHUB_SHA} | cut -c1-8)"
        echo "pkg_file=IV0000-APOL00004_00-APOLLO0000000PS4.pkg" >> $GITHUB_ENV
        echo "llvm_ver=12.0" >> $GITHUB_ENV

      # temporary release until 0.53 is released
    - name: Download OpenOrbis Toolchain
      run: |
        curl -sL https://github.com/illusion0001/OpenOrbis-PS4-Toolchain/releases/download/0.0.1.416/toolchain.tar.gz | tar xvz -C ./
        echo "OO_PS4_TOOLCHAIN=${GITHUB_WORKSPACE}/OpenOrbis/PS4Toolchain" >> $GITHUB_ENV

    - name: Cache LLVM and Clang
      id: cache-llvm
      uses: actions/cache@v3
      with:
        path: ./llvm
        key: llvm-${{ env.llvm_ver }}

    - name: Install LLVM and Clang
      uses: KyleMayes/install-llvm-action@v1
      with:
        version: ${{ env.llvm_ver }}
        cached: ${{ steps.cache-llvm.outputs.cache-hit }}

    - name: Install mbedtls library
      working-directory: mbedtls-2.16.6
      run: |
        mkdir orbis && cd orbis
        cmake --toolchain ../../openorbis.cmake .. -DCMAKE_BUILD_TYPE=Release -DENABLE_TESTING=FALSE -DENABLE_PROGRAMS=FALSE -DMBEDTLS_FATAL_WARNINGS=0
        make mbedtls
        cp library/*.a "${OO_PS4_TOOLCHAIN}/lib"
        cp -R ../include/mbedtls "${OO_PS4_TOOLCHAIN}/include/"

    - name: Install libcurl library
      working-directory: curl-7.64.1
      run: |
        sed -i '54d' include/curl/curl.h
        mkdir orbis && cd orbis
        cmake --toolchain ../../openorbis.cmake .. -DCMAKE_USE_MBEDTLS=1 -DUSE_UNIX_SOCKETS=0 -DENABLE_THREADED_RESOLVER=0 -DENABLE_IPV6=0
        make libcurl
        cp lib/libcurl.a "${OO_PS4_TOOLCHAIN}/lib"

    - name: Compress output
      run: |
        tar -zcvf build.tar.gz ${OO_PS4_TOOLCHAIN}/lib/libcurl.a ${OO_PS4_TOOLCHAIN}/lib/libmbed*.a
    - uses: actions/upload-artifact@v3.1.1
      with:
        name: build-libs
        path: build.tar.gz
        retention-days: 5
